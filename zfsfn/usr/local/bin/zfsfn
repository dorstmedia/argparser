#!/usr/bin/env bash
declare -ag zfsfn_zpool_props; zfsfn_zpool_props=( "ashift" "autoexpand" "autoreplace" "autotrim" "cachefile" "comment" "compatibility" "dedup_table_quota" "dedupditto" "delegation" "failmode" "listsnapshots" "multihost" "readonly" )
zfs_get(){
    local bin="zfs"; local zpool_prop=""; local key=""; local zfs_pool=""
    [ "$1" != "" ] && key="$1" && shift || return 1
    [ "$1" != "" ] && zfs_pool="$1" && shift || return 1

    for zpool_prop in "${zfsfn_zpool_props[@]}"; do 
        [ "$zpool_prop" == "$key" ] && bin="zpool" && break; 
    done
    ${bin} get ${key} ${zfs_pool} -o value -H && return 0 || return 1
}
zfs_set(){
    local bin="zfs"; local zpool_prop=""; local key=""; local value=""; local zfs_pool=""; local current_value=""
    [ "$1" != "" ] && echo "$1" | grep "=" &>/dev/null && {
        keyvalue="$1"
        key="$(echo "$1" | cut -d '=' -f1)"
        value="$(echo "$1" | cut -d '=' -f2-99)"
        shift
    } || return 1
    [ "$1" != "" ] && zfs_pool="$1" && shift || return 1
    for zpool_prop in "${zfsfn_zpool_props[@]}"; do 
        [ "$zpool_prop" == "$key" ] && bin="zpool" && break; 
    done
    current_value="$(zfs_get "${key}" "${zfs_pool}")"
    [ "$(echo ${current_value} | tr '[[:lower:]]' '[[:upper:]]')" == "$(echo ${value} | tr '[[:lower:]]' '[[:upper:]]')" ] && return 0 || {
        echo "# [ZFS] [${zfs_pool}] Set ${keyvalue}"
        ${bin} set ${keyvalue} ${zfs_pool} && return 0 
    }
    return 1
}
zfs_set_defaults(){
    declare -A zfs_defaults; zfs_defaults=( \
        [listsnapshots]="on" \
        [compression]="lz4" \
        [atime]="off" \
        [xattr]="sa" \
    )
    local zfs_pools=(); readarray -t zfs_pools < <(zpool list -o name -H);
    local zfs_pool=""; local keyvalue=""; local key=""; local value=""; local ret=0;
    if [ "$#" != "0" ]; then
        for keyvalue in "${@}"; do
            echo "$keyvalue" | grep "=" &>/dev/null || continue
            key="$(echo "$keyvalue" | cut -d '=' -f1)"
            value="$(echo "$keyvalue" | cut -d '=' -f2-99)"
            zfs_defaults[$key]="$value"
        done
    fi
    echo ""
    echo "# #####################################################################################"
    echo "# [$(date +'%Y-%m-%d %H:%M:%S')]"
    echo "# [ZFS] Set default settings for ${#zfs_pools[@]} zpools:"
    for zfs_pool in "${zfs_pools[@]}"; do echo "#  - ${zfs_pool}"; done
    echo "#"
    #echo "#  - $(echo "${zfs_pools[@]}" | tr ' ' ',')"
    echo "# -------------------------------------------------------------------------------------"
    echo "#"
    for zfs_pool in "${zfs_pools[@]}"; do
        for key in "${!zfs_defaults[@]}"; do
            value="${zfs_defaults[$key]}"
            [ "$key" == "" ] || [ "$value" == "" ] || [ "$zfs_pool" == "" ] && continue
            zfs_set "${key}=${value}" "${zfs_pool}" || ret=1;
        done
    done
    echo "#"
    echo "# #####################################################################################"
    echo ""
    return ${ret}
}
if [ "$1" == "set-defaults" ] || [ "$1" == "set_defaults" ]; then
    shift && zfs_set_defaults "${@}"
elif [ "$1" == "set" ]; then
    shift && zfs_set "${@}"
elif [ "$1" == "get" ]; then
    shift && zfs_get "${@}"
fi
